{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-try-ghost/src/templates/tag.js"],"names":["Tag","data","location","tag","ghostTag","posts","allGhostPost","edges","type","tags","header","numberOfPosts","length","className","map","i","node","key","id","post","num","pageQuery"],"mappings":"2FAAA,kGA0CeA,UA7BH,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACXC,EAAMF,EAAKG,SACXC,EAAQJ,EAAKK,aAAaC,MAEhC,OACI,oCACI,kBAAC,IAAD,CAAUN,KAAMA,EAAMC,SAAUA,EAAUM,KAAK,WAC/C,kBAAC,IAAD,CAAQC,KAAM,CAACN,GAAMO,OAAQ,kBAAC,IAAD,CAAWP,IAAKA,EAAKQ,cAAeN,EAAMO,UACnE,yBAAKC,UAAU,eACX,yBAAKA,UAAU,aACVR,EAAMS,KAAI,WAAYC,GAAZ,IAAGC,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,EAAMI,IAAKL,YAmB9D,IAAMM,EAAS","file":"component---node-modules-gatsby-theme-try-ghost-src-templates-tag-js-ca1d18a5c1b991de1440.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { HeaderTag, Layout, PostCard } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Tag page (/tag/:slug)\n*\n* Loads all posts for the requested tag incl. pagination.\n*\n*/\nconst Tag = ({ data, location }) => {\n    const tag = data.ghostTag\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData data={data} location={location} type=\"series\"/>\n            <Layout tags={[tag]} header={<HeaderTag tag={tag} numberOfPosts={posts.length} />}>\n                <div className=\"inner posts\">\n                    <div className=\"post-feed\">\n                        {posts.map(({ node } , i) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} num={i} />\n                        ))}\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nTag.propTypes = {\n    data: PropTypes.shape({\n        ghostTag: PropTypes.object.isRequired,\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Tag\n\nexport const pageQuery = graphql`\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\n        ghostTag(slug: { eq: $slug }) {\n            ...GhostTagFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            filter: {tags: {elemMatch: {slug: {eq: $slug}}}},\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges {\n                node {\n                ...GhostPostFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}
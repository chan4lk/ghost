{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-try-ghost/src/templates/index.js"],"names":["Index","data","location","posts","allGhostPost","edges","activeClass","render","sticky","isHome","header","className","map","i","node","key","id","post","num","pageQuery"],"mappings":"2FAAA,8GA2CeA,UA7BD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACbC,EAAQF,EAAKG,aAAaC,MAEhC,OACI,oCACI,kBAAC,IAAD,CAAUH,SAAUA,IACpB,kBAAC,IAAD,CAAoBI,YAAY,mBAAmBC,OAAS,SAAAC,GAAM,OAC9D,kBAAC,IAAD,CAAQC,QAAQ,EAAMC,OAAQ,kBAAC,IAAD,MAAiBF,OAAQA,GACnD,yBAAKG,UAAU,eACX,yBAAKA,UAAU,aACVR,EAAMS,KAAI,WAAYC,GAAZ,IAAGC,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,EAAMI,IAAKL,EAAGJ,QAAQ,eAqB7E,IAAMU,EAAS","file":"component---node-modules-gatsby-theme-try-ghost-src-templates-index-js-f7d460ffdc1d25f5e461.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Layout, PostCard, HeaderIndex } from '../components/common'\nimport { StickyNavContainer } from '../components/common/effects'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Main index page (home page)\n*\n* Loads all posts from Ghost\n*\n*/\nconst Index = ({ data, location }) => {\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData location={location} />\n            <StickyNavContainer activeClass=\"fixed-nav-active\" render={ sticky => (\n                <Layout isHome={true} header={<HeaderIndex />} sticky={sticky}>\n                    <div className=\"inner posts\">\n                        <div className=\"post-feed\">\n                            {posts.map(({ node } , i) => (\n                                // The tag below includes the markup for each post - components/common/PostCard.js\n                                <PostCard key={node.id} post={node} num={i} isHome={true} />\n                            ))}\n                        </div>\n                    </div>\n                </Layout>\n            )}/>\n        </>\n    )\n}\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Index\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($limit: Int!, $skip: Int!) {\n    allGhostPost(\n        sort: { order: DESC, fields: [published_at] },\n        limit: $limit,\n        skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}